-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\wifi_server\wifi_setup_server_mac.vhd
-- Created: 2017-09-27 22:05:20
-- 
-- Generated by MATLAB 8.6 and HDL Coder 3.7
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: wifi_setup_server_mac
-- Source Path: wifi_server/wifi_setup_server_mac
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.wifi_server_pkg.ALL;

ENTITY wifi_setup_server_mac IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        data_stream_in_ack                :   IN    std_logic;
        cmd_over                          :   IN    std_logic;
        byte_to_tx                        :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        data_stream_rec_stb               :   IN    std_logic;
        data_stream_rec                   :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        model_cmd                         :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
        rec_cmd_en                        :   IN    std_logic;
        data_stream_send_stb              :   OUT   std_logic;
        data_stream_send                  :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        cmd_start                         :   OUT   std_logic;
        model_sel                         :   OUT   std_logic_vector(3 DOWNTO 0);  -- ufix4
        rec_data_en                       :   OUT   std_logic
        );
END wifi_setup_server_mac;


ARCHITECTURE rtl OF wifi_setup_server_mac IS

  -- Functions
  -- HDLCODER_TO_STDLOGIC 
  FUNCTION hdlcoder_to_stdlogic(arg: boolean) RETURN std_logic IS
  BEGIN
    IF arg THEN
      RETURN '1';
    ELSE
      RETURN '0';
    END IF;
  END FUNCTION;


  -- Signals
  SIGNAL byte_to_tx_unsigned              : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL data_stream_rec_unsigned         : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL model_cmd_unsigned               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL is_wifi_setup_server_mac         : T_state_type_is_wifi_setup_server_mac;  -- uint8
  SIGNAL data_stream_send_tmp             : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL model_sel_tmp                    : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL cnt_wait                         : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL cnt_halt                         : signed(31 DOWNTO 0);  -- int32
  SIGNAL data_stream_send_stb_reg         : std_logic;
  SIGNAL data_stream_send_reg             : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL cmd_start_reg                    : std_logic;
  SIGNAL model_sel_reg                    : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL rec_data_en_reg                  : std_logic;
  SIGNAL is_wifi_setup_server_mac_next    : T_state_type_is_wifi_setup_server_mac;  -- enum type state_type_is_wifi_setup_server_mac (30 enums)
  SIGNAL cnt_wait_next                    : unsigned(31 DOWNTO 0);  -- uint32
  SIGNAL cnt_halt_next                    : signed(31 DOWNTO 0);  -- int32
  SIGNAL data_stream_send_stb_reg_next    : std_logic;
  SIGNAL data_stream_send_reg_next        : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL cmd_start_reg_next               : std_logic;
  SIGNAL model_sel_reg_next               : unsigned(3 DOWNTO 0);  -- ufix4
  SIGNAL rec_data_en_reg_next             : std_logic;

BEGIN
  byte_to_tx_unsigned <= unsigned(byte_to_tx);

  data_stream_rec_unsigned <= unsigned(data_stream_rec);

  model_cmd_unsigned <= unsigned(model_cmd);

  wifi_setup_server_mac_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      is_wifi_setup_server_mac <= IN_initial;
      --outputs
      data_stream_send_stb_reg <= '0';
      data_stream_send_reg <= to_unsigned(16#00#, 8);
      cmd_start_reg <= '0';
      model_sel_reg <= to_unsigned(16#0#, 4);
      rec_data_en_reg <= '0';
      --local variables
      cnt_wait <= to_unsigned(16#00000000#, 32);
      cnt_halt <= to_signed(16#00000000#, 32);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        is_wifi_setup_server_mac <= is_wifi_setup_server_mac_next;
        cnt_wait <= cnt_wait_next;
        cnt_halt <= cnt_halt_next;
        data_stream_send_stb_reg <= data_stream_send_stb_reg_next;
        data_stream_send_reg <= data_stream_send_reg_next;
        cmd_start_reg <= cmd_start_reg_next;
        model_sel_reg <= model_sel_reg_next;
        rec_data_en_reg <= rec_data_en_reg_next;
      END IF;
    END IF;
  END PROCESS wifi_setup_server_mac_1_process;

  wifi_setup_server_mac_1_output : PROCESS (is_wifi_setup_server_mac, data_stream_in_ack, cmd_over, byte_to_tx_unsigned,
       data_stream_rec_stb, data_stream_rec_unsigned, model_cmd_unsigned,
       rec_cmd_en, cnt_wait, cnt_halt, data_stream_send_stb_reg,
       data_stream_send_reg, cmd_start_reg, model_sel_reg, rec_data_en_reg)
    VARIABLE guard1 : std_logic;
    VARIABLE model_sel_reg_temp : unsigned(3 DOWNTO 0);
    VARIABLE add_temp : signed(32 DOWNTO 0);
    VARIABLE add_temp_0 : signed(32 DOWNTO 0);
    VARIABLE add_temp_1 : unsigned(32 DOWNTO 0);
    VARIABLE add_temp_2 : signed(32 DOWNTO 0);
    VARIABLE add_temp_3 : unsigned(32 DOWNTO 0);
    VARIABLE add_temp_4 : unsigned(32 DOWNTO 0);
    VARIABLE add_temp_5 : signed(32 DOWNTO 0);
    VARIABLE add_temp_6 : unsigned(4 DOWNTO 0);
  BEGIN
    model_sel_reg_temp := model_sel_reg;
    cnt_halt_next <= cnt_halt;
    data_stream_send_stb_reg_next <= data_stream_send_stb_reg;
    data_stream_send_reg_next <= data_stream_send_reg;
    cmd_start_reg_next <= cmd_start_reg;
    rec_data_en_reg_next <= rec_data_en_reg;
    is_wifi_setup_server_mac_next <= is_wifi_setup_server_mac;
    cnt_wait_next <= cnt_wait;
    guard1 := '0';
    CASE is_wifi_setup_server_mac IS
      WHEN IN_Tran1_A =>
        IF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran1_A;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#41#, 8);
          --A
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        ELSIF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran1_T;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#54#, 8);
          --T
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        END IF;
      WHEN IN_Tran1_Enter =>
        IF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran1_Enter1;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0A#, 8);
          --/n
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        ELSIF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran1_Enter;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0D#, 8);
          --/r
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        END IF;
      WHEN IN_Tran1_Enter1 =>
        IF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran1_Enter1;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0A#, 8);
          --/n
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        ELSIF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send1_finish;
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= to_unsigned(16#00#, 8);
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        END IF;
      WHEN IN_Tran1_T =>
        IF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran1_Enter;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0D#, 8);
          --/r
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        ELSIF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran1_T;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#54#, 8);
          --T
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        END IF;
      WHEN IN_Tran2_Enter =>
        IF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran2_Enter;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0D#, 8);
          --/r
        ELSIF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran2_Enter1;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0A#, 8);
          --/r
        END IF;
      WHEN IN_Tran2_Enter1 =>
        IF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran2_Enter1;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0A#, 8);
          --/r
        ELSIF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send2_finish;
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= to_unsigned(16#00#, 8);
        END IF;
      WHEN IN_Tran3_Enter =>
        IF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran3_Enter;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0D#, 8);
          --/r
        ELSIF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran3_Enter1;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0A#, 8);
          --/r
        END IF;
      WHEN IN_Tran3_Enter1 =>
        IF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_Tran3_Enter1;
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= to_unsigned(16#0A#, 8);
          --/r
        ELSIF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send3_finish;
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= to_unsigned(16#00#, 8);
        END IF;
      WHEN IN_begin_send_data =>
        is_wifi_setup_server_mac_next <= IN_send_word;
        cmd_start_reg_next <= '1';
        data_stream_send_stb_reg_next <= '0';
        data_stream_send_reg_next <= byte_to_tx_unsigned;
        cnt_halt_next <= to_signed(16#00000000#, 32);
      WHEN IN_data_send_over =>
        is_wifi_setup_server_mac_next <= IN_device_config_OK;
        model_sel_reg_temp := to_unsigned(16#6#, 4);
        cnt_halt_next <= to_signed(16#00000000#, 32);
      WHEN IN_device_OK =>
        is_wifi_setup_server_mac_next <= IN_send_cmd1;
        --output
        cmd_start_reg_next <= '1';
        data_stream_send_stb_reg_next <= '0';
        data_stream_send_reg_next <= byte_to_tx_unsigned;
        --local
        cnt_wait_next <= to_unsigned(16#00000000#, 32);
        cnt_halt_next <= to_signed(16#00000000#, 32);
      WHEN IN_device_config_OK =>
        IF (data_stream_rec_stb AND hdlcoder_to_stdlogic(data_stream_rec_unsigned = to_unsigned(16#53#, 8))) = '1' THEN 
          --when receive S from client
          is_wifi_setup_server_mac_next <= IN_wait_server_rec_S;
          add_temp_0 := resize(cnt_halt, 33) + to_signed(1, 33);
          IF (add_temp_0(32) = '0') AND (add_temp_0(31) /= '0') THEN 
            cnt_halt_next <= X"7FFFFFFF";
          ELSIF (add_temp_0(32) = '1') AND (add_temp_0(31) /= '1') THEN 
            cnt_halt_next <= X"80000000";
          ELSE 
            cnt_halt_next <= add_temp_0(31 DOWNTO 0);
          END IF;
        ELSIF (( NOT data_stream_rec_stb) OR hdlcoder_to_stdlogic(data_stream_rec_unsigned /= to_unsigned(16#53#, 8))) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_device_config_OK;
          model_sel_reg_temp := to_unsigned(16#6#, 4);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        END IF;
      WHEN IN_initial =>
        is_wifi_setup_server_mac_next <= IN_Tran1_A;
        data_stream_send_stb_reg_next <= '1';
        data_stream_send_reg_next <= to_unsigned(16#41#, 8);
        --A
        cnt_wait_next <= to_unsigned(16#00000000#, 32);
        cnt_halt_next <= to_signed(16#00000000#, 32);
      WHEN IN_pre_rec_data =>
        IF data_stream_rec_stb = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_rec_data;
          add_temp := resize(cnt_halt, 33) + to_signed(1, 33);
          IF (add_temp(32) = '0') AND (add_temp(31) /= '0') THEN 
            cnt_halt_next <= X"7FFFFFFF";
          ELSIF (add_temp(32) = '1') AND (add_temp(31) /= '1') THEN 
            cnt_halt_next <= X"80000000";
          ELSE 
            cnt_halt_next <= add_temp(31 DOWNTO 0);
          END IF;
        ELSIF ( NOT data_stream_rec_stb) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_pre_rec_data;
        END IF;
      WHEN IN_rec_data =>
        IF cnt_halt < to_signed(8, 32) THEN 
          is_wifi_setup_server_mac_next <= IN_pre_rec_data;
        ELSIF cnt_halt = to_signed(8, 32) THEN 
          is_wifi_setup_server_mac_next <= IN_wait_port;
          rec_data_en_reg_next <= '0';
          cnt_halt_next <= to_signed(16#00000001#, 32);
        END IF;
      WHEN IN_send1_finish =>
        IF ( NOT rec_cmd_en) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send1_finish;
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= to_unsigned(16#00#, 8);
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        ELSIF rec_cmd_en = '1' THEN 
          IF model_cmd_unsigned /= to_unsigned(16#1#, 4) THEN 
            is_wifi_setup_server_mac_next <= IN_Tran1_A;
            data_stream_send_stb_reg_next <= '1';
            data_stream_send_reg_next <= to_unsigned(16#41#, 8);
            --A
            cnt_wait_next <= to_unsigned(16#00000000#, 32);
            cnt_halt_next <= to_signed(16#00000000#, 32);
          ELSIF model_cmd_unsigned = to_unsigned(16#1#, 4) THEN 
            is_wifi_setup_server_mac_next <= IN_wait1_cnt;
            add_temp_3 := resize(cnt_wait, 33) + to_unsigned(1, 33);
            IF add_temp_3(32) /= '0' THEN 
              cnt_wait_next <= X"FFFFFFFF";
            ELSE 
              cnt_wait_next <= add_temp_3(31 DOWNTO 0);
            END IF;
            cnt_halt_next <= to_signed(16#00000000#, 32);
          END IF;
        END IF;
      WHEN IN_send2_finish =>
        IF ( NOT rec_cmd_en) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send2_finish;
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= to_unsigned(16#00#, 8);
        ELSIF rec_cmd_en = '1' THEN 
          IF model_cmd_unsigned /= to_unsigned(16#1#, 4) THEN 
            --This command does not config sucessfully.
            is_wifi_setup_server_mac_next <= IN_send_cmd1;
            --output
            cmd_start_reg_next <= '1';
            data_stream_send_stb_reg_next <= '0';
            data_stream_send_reg_next <= byte_to_tx_unsigned;
            --local
            cnt_wait_next <= to_unsigned(16#00000000#, 32);
            cnt_halt_next <= to_signed(16#00000000#, 32);
          ELSIF model_cmd_unsigned = to_unsigned(16#1#, 4) THEN 
            is_wifi_setup_server_mac_next <= IN_wait1_cnt;
            add_temp_4 := resize(cnt_wait, 33) + to_unsigned(1, 33);
            IF add_temp_4(32) /= '0' THEN 
              cnt_wait_next <= X"FFFFFFFF";
            ELSE 
              cnt_wait_next <= add_temp_4(31 DOWNTO 0);
            END IF;
            cnt_halt_next <= to_signed(16#00000000#, 32);
          END IF;
        END IF;
      WHEN IN_send3_finish =>
        IF model_sel_reg /= to_unsigned(16#7#, 4) THEN 
          IF ( NOT rec_cmd_en) = '1' THEN 
            is_wifi_setup_server_mac_next <= IN_send3_finish;
            data_stream_send_stb_reg_next <= '0';
            data_stream_send_reg_next <= to_unsigned(16#00#, 8);
          ELSIF rec_cmd_en = '1' THEN 
            IF model_cmd_unsigned /= to_unsigned(16#1#, 4) THEN 
              is_wifi_setup_server_mac_next <= IN_send_word;
              cmd_start_reg_next <= '1';
              data_stream_send_stb_reg_next <= '0';
              data_stream_send_reg_next <= byte_to_tx_unsigned;
              cnt_halt_next <= to_signed(16#00000000#, 32);
            ELSIF model_cmd_unsigned = to_unsigned(16#1#, 4) THEN 
              is_wifi_setup_server_mac_next <= IN_begin_send_data;
              model_sel_reg_temp := to_unsigned(16#7#, 4);
              cnt_halt_next <= to_signed(16#00000000#, 32);
            ELSE 
              guard1 := '1';
            END IF;
          ELSE 
            guard1 := '1';
          END IF;
        ELSE 
          guard1 := '1';
        END IF;
      WHEN IN_send_cmd1 =>
        is_wifi_setup_server_mac_next <= IN_send_cmd2;
        --output
        cmd_start_reg_next <= '1';
        data_stream_send_stb_reg_next <= '1';
        data_stream_send_reg_next <= byte_to_tx_unsigned;
      WHEN IN_send_cmd2 =>
        IF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send_cmd2;
          --output
          cmd_start_reg_next <= '1';
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= byte_to_tx_unsigned;
        ELSIF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_wait_cmd;
          cmd_start_reg_next <= '1';
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= byte_to_tx_unsigned;
        END IF;
      WHEN IN_send_cmd_over =>
        is_wifi_setup_server_mac_next <= IN_Tran2_Enter;
        data_stream_send_stb_reg_next <= '1';
        data_stream_send_reg_next <= to_unsigned(16#0D#, 8);
        --/r
      WHEN IN_send_data_over =>
        is_wifi_setup_server_mac_next <= IN_Tran3_Enter;
        data_stream_send_stb_reg_next <= '1';
        data_stream_send_reg_next <= to_unsigned(16#0D#, 8);
        --/r
      WHEN IN_send_word =>
        is_wifi_setup_server_mac_next <= IN_send_word1;
        cmd_start_reg_next <= '1';
        data_stream_send_stb_reg_next <= '1';
        data_stream_send_reg_next <= byte_to_tx_unsigned;
      WHEN IN_send_word1 =>
        IF data_stream_in_ack = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_wait_data;
          cmd_start_reg_next <= '1';
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= byte_to_tx_unsigned;
        ELSIF ( NOT data_stream_in_ack) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send_word1;
          cmd_start_reg_next <= '1';
          data_stream_send_stb_reg_next <= '1';
          data_stream_send_reg_next <= byte_to_tx_unsigned;
        END IF;
      WHEN IN_wait1_cnt =>
        IF cnt_wait < to_unsigned(5000000, 32) THEN 
          --0.5s
          is_wifi_setup_server_mac_next <= IN_wait1_cnt;
          add_temp_1 := resize(cnt_wait, 33) + to_unsigned(1, 33);
          IF add_temp_1(32) /= '0' THEN 
            cnt_wait_next <= X"FFFFFFFF";
          ELSE 
            cnt_wait_next <= add_temp_1(31 DOWNTO 0);
          END IF;
          cnt_halt_next <= to_signed(16#00000000#, 32);
        ELSIF cnt_wait >= to_unsigned(5000000, 32) THEN 
          --0.5s
          IF model_sel_reg /= to_unsigned(16#5#, 4) THEN 
            is_wifi_setup_server_mac_next <= IN_device_OK;
            --output, start from 1
            add_temp_6 := resize(model_sel_reg, 5) + to_unsigned(16#01#, 5);
            IF add_temp_6(4) /= '0' THEN 
              model_sel_reg_temp := "1111";
            ELSE 
              model_sel_reg_temp := add_temp_6(3 DOWNTO 0);
            END IF;
            cnt_wait_next <= to_unsigned(16#00000000#, 32);
            cnt_halt_next <= to_signed(16#00000000#, 32);
          ELSIF model_sel_reg = to_unsigned(16#5#, 4) THEN 
            is_wifi_setup_server_mac_next <= IN_device_config_OK;
            model_sel_reg_temp := to_unsigned(16#6#, 4);
            cnt_halt_next <= to_signed(16#00000000#, 32);
          END IF;
        END IF;
      WHEN IN_wait_cmd =>
        IF ( NOT cmd_over) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send_cmd1;
          --output
          cmd_start_reg_next <= '1';
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= byte_to_tx_unsigned;
          --local
          cnt_wait_next <= to_unsigned(16#00000000#, 32);
          cnt_halt_next <= to_signed(16#00000000#, 32);
        ELSIF cmd_over = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send_cmd_over;
          cmd_start_reg_next <= '0';
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= to_unsigned(16#00#, 8);
        END IF;
      WHEN IN_wait_data =>
        IF ( NOT cmd_over) = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send_word;
          cmd_start_reg_next <= '1';
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= byte_to_tx_unsigned;
          cnt_halt_next <= to_signed(16#00000000#, 32);
        ELSIF cmd_over = '1' THEN 
          is_wifi_setup_server_mac_next <= IN_send_data_over;
          cmd_start_reg_next <= '0';
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= to_unsigned(16#00#, 8);
        END IF;
      WHEN IN_wait_port =>
        IF cnt_halt <= to_signed(2000000, 32) THEN 
          --0.02s
          is_wifi_setup_server_mac_next <= IN_wait_port;
          rec_data_en_reg_next <= '0';
          add_temp_2 := resize(cnt_halt, 33) + to_signed(1, 33);
          IF (add_temp_2(32) = '0') AND (add_temp_2(31) /= '0') THEN 
            cnt_halt_next <= X"7FFFFFFF";
          ELSIF (add_temp_2(32) = '1') AND (add_temp_2(31) /= '1') THEN 
            cnt_halt_next <= X"80000000";
          ELSE 
            cnt_halt_next <= add_temp_2(31 DOWNTO 0);
          END IF;
        ELSIF cnt_halt > to_signed(2000000, 32) THEN 
          --0.02s
          is_wifi_setup_server_mac_next <= IN_send_word;
          cmd_start_reg_next <= '1';
          data_stream_send_stb_reg_next <= '0';
          data_stream_send_reg_next <= byte_to_tx_unsigned;
          cnt_halt_next <= to_signed(16#00000000#, 32);
        END IF;
      WHEN IN_wait_server_rec_S =>
        IF (data_stream_rec_stb AND hdlcoder_to_stdlogic(data_stream_rec_unsigned = to_unsigned(16#54#, 8))) = '1' THEN 
          --when receive T from client
          is_wifi_setup_server_mac_next <= IN_wait_server_rec_T;
          rec_data_en_reg_next <= '1';
          --when get T, begin rec data
        ELSIF (( NOT data_stream_rec_stb) OR hdlcoder_to_stdlogic(data_stream_rec_unsigned /= to_unsigned(16#54#, 8))) = '1' THEN 
          IF cnt_halt <= to_signed(500000000, 32) THEN 
            --5sec
            is_wifi_setup_server_mac_next <= IN_wait_server_rec_S;
            add_temp_5 := resize(cnt_halt, 33) + to_signed(1, 33);
            IF (add_temp_5(32) = '0') AND (add_temp_5(31) /= '0') THEN 
              cnt_halt_next <= X"7FFFFFFF";
            ELSIF (add_temp_5(32) = '1') AND (add_temp_5(31) /= '1') THEN 
              cnt_halt_next <= X"80000000";
            ELSE 
              cnt_halt_next <= add_temp_5(31 DOWNTO 0);
            END IF;
          ELSIF cnt_halt > to_signed(500000000, 32) THEN 
            --5sec
            is_wifi_setup_server_mac_next <= IN_device_config_OK;
            model_sel_reg_temp := to_unsigned(16#6#, 4);
            cnt_halt_next <= to_signed(16#00000000#, 32);
          END IF;
        END IF;
      WHEN OTHERS => 
        is_wifi_setup_server_mac_next <= IN_pre_rec_data;
    END CASE;
    IF guard1 = '1' THEN 
      IF model_sel_reg_temp = to_unsigned(16#7#, 4) THEN 
        is_wifi_setup_server_mac_next <= IN_data_send_over;
        model_sel_reg_temp := to_unsigned(16#7#, 4);
        cnt_halt_next <= to_signed(16#00000000#, 32);
      END IF;
    END IF;
    model_sel_reg_next <= model_sel_reg_temp;
  END PROCESS wifi_setup_server_mac_1_output;

  data_stream_send_stb <= data_stream_send_stb_reg_next;
  data_stream_send_tmp <= data_stream_send_reg_next;
  cmd_start <= cmd_start_reg_next;
  model_sel_tmp <= model_sel_reg_next;
  rec_data_en <= rec_data_en_reg_next;

  data_stream_send <= std_logic_vector(data_stream_send_tmp);

  model_sel <= std_logic_vector(model_sel_tmp);

END rtl;

